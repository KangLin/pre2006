<html>

<head>
<meta http-equiv="Content-Language" content="zh-cn">
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<title>CreateEvent</title>
</head>

<body>

<h1>CreateEvent</h1>
<p>建立一个命名或不命名的事件对象。 </p>
<pre><code><b>HANDLE CreateEvent(
  LPSECURITY_ATTRIBUTES</b><i> lpEventAttributes</i><b>,</b>
<b>                      </b>// 安全属性结构指针<b>
  BOOL</b><i> bManualReset</i><b>,  </b>// 设置手动释放事件<b>
  BOOL</b><i> bInitialState</i><b>, </b>// 最初状态标志
<b>  LPCTSTR</b><i> lpName</i>      // 事件对象名的指针
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
	<dt><i>lpEventAttributes</i> </dt>
	<dd>Pointer to a
	<a href="mk:@MSITStore:g:/PROGRAME/MSDN/MSDN/winbase.chm::/devdoc/live/pdwbase/accctrl_8gs2.htm">
	<b>SECURITY_ATTRIBUTES</b></a> structure that determines whether the 
	returned handle can be inherited by child processes. If <i>lpEventAttributes</i> 
	is NULL, the handle cannot be inherited. 
	<p><b>Windows NT:</b> The <b>lpSecurityDescriptor</b> member of the 
	structure specifies a security descriptor for the new event. If <i>
	lpEventAttributes</i> is NULL, the event gets a default security descriptor.
	</dd>
	<dt><i>bManualReset</i> </dt>
	<dd>指定在建立事件对象时，是建立手工设置事件对象的状态，还是自动设置事件对象的状态。如果是TRUE，那么你必须用其 
	<a href="mk:@MSITStore:g:/PROGRAME/MSDN/MSDN/winbase.chm::/devdoc/live/pdwbase/synchro_4f78.htm">
	<b>ResetEvent</b></a> 函数手工设置事件状态为非信号态。 如果是 
	FALSE,当一个单一的等待线程被释放后，系统将自动设置对象状态为非信号态 。 
	</dd>
	<dt><i>bInitialState</i> </dt>
	<dd>指定事件对象的初始状态。如果是TRUE，初始状态为信号态，否则是非信号态. 
	</dd>
	<dt><i>lpName</i> </dt>
	<dd>Pointer to a null-terminated string specifying the name of the event 
	object. The name is limited to MAX_PATH characters and can contain any 
	character except the backslash path-separator character (\). Name comparison 
	is case sensitive. 
	<p>If <i>lpName</i> matches the name of an existing named event object, this 
	function requests EVENT_ALL_ACCESS access to the existing object. In this 
	case, the <i>bManualReset</i> and <i>bInitialState</i> parameters are 
	ignored because they have already been set by the creating process. If the
	<i>lpEventAttributes</i> parameter is not NULL, it determines whether the 
	handle can be inherited, but its security-descriptor member is ignored. </p>
	<p>If <i>lpName</i> is NULL, the event object is created without a name. </p>
	<p>If <i>lpName</i> matches the name of an existing semaphore, mutex, 
	waitable timer, job, or file-mapping object, the function fails and the
	<a href="mk:@MSITStore:g:/PROGRAME/MSDN/MSDN/winbase.chm::/devdoc/live/pdwbase/errors_3uwi.htm">
	<b>GetLastError</b></a> function returns ERROR_INVALID_HANDLE. This occurs 
	because these objects share the same name space. </dd>
</dl>
<h4>Return Values</h4>
<p>If the function succeeds, the return value is a handle to the event object. 
If the named event object existed before the function call, the function returns 
a handle to the existing object and
<a href="mk:@MSITStore:g:/PROGRAME/MSDN/MSDN/winbase.chm::/devdoc/live/pdwbase/errors_3uwi.htm">
<b>GetLastError</b></a> returns ERROR_ALREADY_EXISTS. </p>
<p>If the function fails, the return value is NULL. To get extended error 
information, call <b>GetLastError</b>. </p>
<h4>Remarks</h4>
<p>The handle returned by <b>CreateEvent</b> has EVENT_ALL_ACCESS access to the 
new event object and can be used in any function that requires a handle to an 
event object. </p>
<p>Any thread of the calling process can specify the event-object handle in a 
call to one of the
<a href="mk:@MSITStore:g:/PROGRAME/MSDN/MSDN/winbase.chm::/devdoc/live/pdwbase/synchro_5vqr.htm">
wait functions</a>. The single-object wait functions return when the state of 
the specified object is signaled. The multiple-object wait functions can be 
instructed to return either when any one or when all of the specified objects 
are signaled. When a wait function returns, the waiting thread is released to 
continue its execution. </p>
<p>The initial state of the event object is specified by the <i>bInitialState</i> 
parameter. Use the
<a href="mk:@MSITStore:g:/PROGRAME/MSDN/MSDN/winbase.chm::/devdoc/live/pdwbase/synchro_8ut0.htm">
<b>SetEvent</b></a> function to set the state of an event object to signaled. 
Use the
<a href="mk:@MSITStore:g:/PROGRAME/MSDN/MSDN/winbase.chm::/devdoc/live/pdwbase/synchro_4f78.htm">
<b>ResetEvent</b></a> function to reset the state of an event object to 
nonsignaled. </p>
<p>When the state of a manual-reset event object is signaled, it remains 
signaled until it is explicitly reset to nonsignaled by the <b>ResetEvent</b> 
function. Any number of waiting threads, or threads that subsequently begin wait 
operations for the specified event object, can be released while the object's 
state is signaled. </p>
<p>When the state of an auto-reset event object is signaled, it remains signaled 
until a single waiting thread is released; the system then automatically resets 
the state to nonsignaled. If no threads are waiting, the event object's state 
remains signaled. </p>
<p>Multiple processes can have handles of the same event object, enabling use of 
the object for interprocess synchronization. The following object-sharing 
mechanisms are available: </p>
<ul>
	<li>A child process created by the <b>CreateProcess</b> function can inherit 
	a handle to an event object if the <i>lpEventAttributes</i> parameter of <b>
	CreateEvent</b> enabled inheritance. 
	</li>
	<li>A process can specify the event-object handle in a call to the <b>
	DuplicateHandle</b> function to create a duplicate handle that can be used 
	by another process. 
	</li>
	<li>A process can specify the name of an event object in a call to the <b>
	OpenEvent</b> or <b>CreateEvent</b> function. </li>
</ul>
<p>Use the <b>CloseHandle</b> function to close the handle. The system closes 
the handle automatically when the process terminates. The event object is 
destroyed when its last handle has been closed. </p>
<p><b>Windows CE:</b> Windows CE does not support security attributes, so the <i>
lpEventAttributes</i> parameter must be set to NULL. </p>
<p>Windows CE does not support named events, so the <i>lpname</i> parameter must 
be set to NULL.</p>
<h4>QuickInfo</h4>
<p><b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Requires version 1.0 or later.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winbase.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use kernel32.lib.<br>
<b>&nbsp;&nbsp;Unicode: </b>Implemented as Unicode and ANSI versions on Windows NT.</p>
<h4>See Also</h4>
<p>
<a href="mk:@MSITStore:g:/PROGRAME/MSDN/MSDN/winbase.chm::/devdoc/live/pdwbase/synchro_4q3y.htm">
Synchronization Overview</a>,
<a href="mk:@MSITStore:g:/PROGRAME/MSDN/MSDN/winbase.chm::/devdoc/live/pdwbase/synchro_08z7.htm">
Synchronization Functions</a>,
<a href="mk:@MSITStore:g:/PROGRAME/MSDN/MSDN/winbase.chm::/devdoc/live/pdwbase/handobj_289x.htm">
<b>CloseHandle</b></a>,
<a href="mk:@MSITStore:g:/PROGRAME/MSDN/MSDN/winbase.chm::/devdoc/live/pdwbase/prothred_9dpv.htm">
<b>CreateProcess</b></a>,
<a href="mk:@MSITStore:g:/PROGRAME/MSDN/MSDN/winbase.chm::/devdoc/live/pdwbase/handobj_2pyd.htm">
<b>DuplicateHandle</b></a>,
<a href="mk:@MSITStore:g:/PROGRAME/MSDN/MSDN/winbase.chm::/devdoc/live/pdwbase/synchro_5myc.htm">
<b>OpenEvent</b></a>,
<a href="mk:@MSITStore:g:/PROGRAME/MSDN/MSDN/winbase.chm::/devdoc/live/pdwbase/synchro_4f78.htm">
<b>ResetEvent</b></a>,
<a href="mk:@MSITStore:g:/PROGRAME/MSDN/MSDN/winbase.chm::/devdoc/live/pdwbase/accctrl_8gs2.htm">
<b>SECURITY_ATTRIBUTES</b></a>,
<a href="mk:@MSITStore:g:/PROGRAME/MSDN/MSDN/winbase.chm::/devdoc/live/pdwbase/synchro_8ut0.htm">
<b>SetEvent</b></a> </p>

</body>

</html>
