<html>

<head>
<meta http-equiv="Content-Language" content="zh-cn">
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<title>WaitForSingleObject</title>
</head>

<body>

<h1>WaitForSingleObject</h1>
<p>在下列情况出现时,这个函数返回: </p>
<ul>
	<li>指定的对象处于信号态时</li>
	<li>指定的时间间隔已过</li>
</ul>
<pre><code><b>DWORD WaitForSingleObject(
  HANDLE</b><i> hHandle</i><b>,        </b>// handle to object to wait for
<b>  DWORD</b><i> dwMilliseconds</i>   // time-out interval in milliseconds
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
	<dt><i>hHandle</i> </dt>
	<dd>Handle to the object. For a list of the object types whose handles can 
	be specified, see the following Remarks section. 
	<p><b>Windows NT:</b> The handle must have SYNCHRONIZE access. For more 
	information, see
	<a href="mk:@MSITStore:g:/PROGRAME/MSDN/MSDN/winbase.chm::/devdoc/live/pdwbase/accctrl_6gdv.htm">
	Standard Access Rights</a>. </dd>
	<dt><i>dwMilliseconds</i> </dt>
	<dd>Specifies the time-out interval, in milliseconds. The function returns 
	if the interval elapses, even if the object's state is nonsignaled. If <i>
	dwMilliseconds</i> is zero, the function tests the object's state and 
	returns immediately. If <i>dwMilliseconds</i> is INFINITE, the function's 
	time-out interval never elapses. </dd>
	<dt>&nbsp;&nbsp;&nbsp;&nbsp; 如果是 
	INFINITE，告诉WaitForSingleObject()在特定的事件不处于信号态时不要返回，即把它放在线程的开始的话，那么系统将挂起这个线程，直到事件处于信号态时才继续执行下去。当已经准备好线程继续执行下去的条件时，调用SetEvent()，当线程获得了相应信号态信号后便会继续执行下去。 
	</dt>
</dl>
<h4>Return Values</h4>
<p>If the function succeeds, the return value indicates the event that caused 
the function to return. This value can be one of the following. </p>
<table cellSpacing="4" cols="2">
	<tr vAlign="top">
		<th align="left" width="32%">Value</th>
		<th align="left" width="68%">Meaning</th>
	</tr>
	<tr vAlign="top">
		<td width="32%">WAIT_ABANDONED</td>
		<td width="68%">The specified object is a mutex object that was not 
		released by the thread that owned the mutex object before the owning 
		thread terminated. Ownership of the mutex object is granted to the 
		calling thread, and the mutex is set to nonsignaled.</td>
	</tr>
	<tr vAlign="top">
		<td width="32%">WAIT_OBJECT_0</td>
		<td width="68%">The state of the specified object is signaled.</td>
	</tr>
	<tr vAlign="top">
		<td width="32%">WAIT_TIMEOUT</td>
		<td width="68%">The time-out interval elapsed, and the object's state is 
		nonsignaled.</td>
	</tr>
</table>
<br>
　<p>If the function fails, the return value is WAIT_FAILED. To get extended 
error information, call
<a href="mk:@MSITStore:g:/PROGRAME/MSDN/MSDN/winbase.chm::/devdoc/live/pdwbase/errors_3uwi.htm">
<b>GetLastError</b></a>. </p>
<h4>Remarks</h4>
<p>The <b>WaitForSingleObject</b> function checks the current state of the 
specified object. If the object's state is nonsignaled, the calling thread 
enters an efficient wait state. The thread consumes very little processor time 
while waiting for the object state to become signaled or the time-out interval 
to elapse.</p>
<p>Before returning, a wait function modifies the state of some types of 
synchronization objects. Modification occurs only for the object whose signaled 
state caused the function to return. For example, the count of a semaphore 
object is decreased by one. </p>
<p>The <b>WaitForSingleObject</b> function can wait for the following objects:
</p>
<ul>
	<li>Change notification 
	</li>
	<li>Console input 
	</li>
	<li>Event 
	</li>
	<li>Job 
	</li>
	<li>Mutex 
	</li>
	<li>Process 
	</li>
	<li>Semaphore 
	</li>
	<li>Thread 
	</li>
	<li>Waitable timer </li>
</ul>
<p>For more information, see
<a href="mk:@MSITStore:g:/PROGRAME/MSDN/MSDN/winbase.chm::/devdoc/live/pdwbase/synchro_5gqb.htm">
Synchronization Objects</a>.</p>
<p>Use caution when calling the wait functions and code that directly or 
indirectly creates windows. If a thread creates any windows, it must process 
messages. Message broadcasts are sent to all windows in the system. A thread 
that uses a wait function with no time-out interval may cause the system to 
become deadlocked. Two examples of code that indirectly creates windows are DDE 
and COM <b>CoInitialize</b>. Therefore, if you have a thread that creates 
windows, use
<a href="mk:@MSITStore:g:/PROGRAME/MSDN/MSDN/winbase.chm::/devdoc/live/pdwbase/synchro_2esz.htm">
<b>MsgWaitForMultipleObjects</b></a> or
<a href="mk:@MSITStore:g:/PROGRAME/MSDN/MSDN/winbase.chm::/devdoc/live/pdwbase/synchro_6lh4.htm">
<b>MsgWaitForMultipleObjectsEx</b></a>, rather than <b>WaitForSingleObject</b>.</p>
<p><b>Windows CE:</b> Windows CE does not support waiting for semaphores, change 
notification objects, console input, and timers.</p>
<p>Waiting on an invalid handle causes <b>WaitForSingleObject</b> to return 
WAIT_FAILED.</p>
<h4>QuickInfo</h4>
<p><b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Requires version 1.0 or later.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winbase.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use kernel32.lib.</p>
<h4>See Also</h4>
<p>
<a href="mk:@MSITStore:g:/PROGRAME/MSDN/MSDN/winbase.chm::/devdoc/live/pdwbase/synchro_4q3y.htm">
Synchronization Overview</a>,
<a href="mk:@MSITStore:g:/PROGRAME/MSDN/MSDN/winbase.chm::/devdoc/live/pdwbase/synchro_08z7.htm">
Synchronization Functions</a>,
<a href="mk:@MSITStore:g:/PROGRAME/MSDN/MSDN/winbase.chm::/devdoc/live/pdwbase/synchro_9kj6.htm">
<b>CancelWaitableTimer</b></a>,
<a href="mk:@MSITStore:g:/PROGRAME/MSDN/MSDN/winbase.chm::/devdoc/live/pdwbase/synchro_8ub8.htm">
<b>CreateEvent</b></a>,
<a href="mk:@MSITStore:g:/PROGRAME/MSDN/MSDN/winbase.chm::/devdoc/live/pdwbase/filesio_7wmd.htm">
<b>CreateFile</b></a>,
<a href="mk:@MSITStore:g:/PROGRAME/MSDN/MSDN/winbase.chm::/devdoc/live/pdwbase/synchro_1a2g.htm">
<b>CreateMutex</b></a>,
<a href="mk:@MSITStore:g:/PROGRAME/MSDN/MSDN/winbase.chm::/devdoc/live/pdwbase/prothred_9dpv.htm">
<b>CreateProcess</b></a>,
<a href="mk:@MSITStore:g:/PROGRAME/MSDN/MSDN/winbase.chm::/devdoc/live/pdwbase/prothred_8b38.htm">
<b>CreateRemoteThread</b></a>,
<a href="mk:@MSITStore:g:/PROGRAME/MSDN/MSDN/winbase.chm::/devdoc/live/pdwbase/synchro_9zol.htm">
<b>CreateSemaphore</b></a>,
<a href="mk:@MSITStore:g:/PROGRAME/MSDN/MSDN/winbase.chm::/devdoc/live/pdwbase/prothred_4084.htm">
<b>CreateThread</b></a>,
<a href="mk:@MSITStore:g:/PROGRAME/MSDN/MSDN/winbase.chm::/devdoc/live/pdwbase/synchro_51o2.htm">
<b>CreateWaitableTimer</b></a>,
<a href="mk:@MSITStore:g:/PROGRAME/MSDN/MSDN/winbase.chm::/devdoc/live/pdwbase/filesio_9hgu.htm">
<b>FindFirstChangeNotification</b></a>,
<a href="mk:@MSITStore:g:/PROGRAME/MSDN/MSDN/winbase.chm::/devdoc/live/pdwbase/conchar_7k9x.htm">
<b>GetStdHandle</b></a>,
<a href="mk:@MSITStore:g:/PROGRAME/MSDN/MSDN/winbase.chm::/devdoc/live/pdwbase/synchro_2esz.htm">
<b>MsgWaitForMultipleObjects</b></a>,
<a href="mk:@MSITStore:g:/PROGRAME/MSDN/MSDN/winbase.chm::/devdoc/live/pdwbase/synchro_6lh4.htm">
<b>MsgWaitForMultipleObjectsEx</b></a>,
<a href="mk:@MSITStore:g:/PROGRAME/MSDN/MSDN/winbase.chm::/devdoc/live/pdwbase/synchro_5myc.htm">
<b>OpenEvent</b></a>,
<a href="mk:@MSITStore:g:/PROGRAME/MSDN/MSDN/winbase.chm::/devdoc/live/pdwbase/synchro_82pk.htm">
<b>OpenMutex</b></a>,
<a href="mk:@MSITStore:g:/PROGRAME/MSDN/MSDN/winbase.chm::/devdoc/live/pdwbase/prothred_478z.htm">
<b>OpenProcess</b></a>,
<a href="mk:@MSITStore:g:/PROGRAME/MSDN/MSDN/winbase.chm::/devdoc/live/pdwbase/synchro_3y3p.htm">
<b>OpenSemaphore</b></a>,
<a href="mk:@MSITStore:g:/PROGRAME/MSDN/MSDN/winbase.chm::/devdoc/live/pdwbase/synchro_0lv6.htm">
<b>OpenWaitableTimer</b></a>,
<a href="mk:@MSITStore:g:/PROGRAME/MSDN/MSDN/winbase.chm::/devdoc/live/pdwbase/synchro_1ylw.htm">
<b>PulseEvent</b></a>,
<a href="mk:@MSITStore:g:/PROGRAME/MSDN/MSDN/winbase.chm::/devdoc/live/pdwbase/synchro_4f78.htm">
<b>ResetEvent</b></a>,
<a href="mk:@MSITStore:g:/PROGRAME/MSDN/MSDN/winbase.chm::/devdoc/live/pdwbase/synchro_8ut0.htm">
<b>SetEvent</b></a>,
<a href="mk:@MSITStore:g:/PROGRAME/MSDN/MSDN/winbase.chm::/devdoc/live/pdwbase/synchro_6f1u.htm">
<b>SetWaitableTimer</b></a> </p>

</body>

</html>
